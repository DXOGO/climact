# Build stage
FROM node:18-alpine AS build

# Set environment to production for optimized builds
ENV NODE_ENV=production

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json first to leverage Docker cache
COPY package*.json ./

# Install only production dependencies
RUN npm config set registry https://registry.npmjs.org/ && \
    npm install

# Copy the rest of the application code
COPY . .

# Build the React app
RUN npm run build

# Run stage with NGINX to serve the build
FROM nginx:stable-alpine AS production

# Copy the build output from the build stage to NGINXâ€™s web root
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom NGINX configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80 for web traffic
EXPOSE 80

# Start NGINX server
CMD ["nginx", "-g", "daemon off;"]
