FROM node:18-alpine AS build

# Set environment to production for optimized builds
ENV NODE_ENV=production

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json first to leverage Docker cache
COPY package*.json ./

# Install only production dependencies
RUN npm config set registry https://registry.npmjs.org/ && \
    npm install

# Copy the rest of the application code
COPY . .

# Build the React app
RUN npm run build

# Build the React app
CMD ["npm", "start"]

# # Step 2: Serve the app with nginx
# FROM nginx:alpine

# # Copy the React build output to the nginx HTML directory
# COPY --from=build /app/build /usr/share/nginx/html

# # Copy custom nginx config if needed (for routing, headers, etc.)
# COPY nginx.conf /etc/nginx/nginx.conf

# # Expose the default nginx port
# EXPOSE 80

# # Start nginx
# CMD ["nginx", "-g", "daemon off;"]